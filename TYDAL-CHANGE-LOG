
Phoronix Test Suite (Git)

- pts-core: Cut down on use of pts_exit() command due to the new option architecture, instead use returns appropriately
- pts-core: Various PHP notice fixes
- pts-core: Fix fatal error in list-installed-tests option
- pts-core: Disable SCTP until the new version is working
- pts-core: Fix regression that disabled benchmarking against Phoronix Global by simply supplying the global ID
- pts-core: Fix regression in clone command that didn't download the XML from Phoronix Global
- pts-core: Add pts-functions_io.php and pts-functions_global.php
- pts-core: Add pts_load_function_set() for loading functions within PTS options
- pts-core: Rename various options
- pts-core: Shorten phoronix-test-suite text
- pts-core: Add XSL-powered results overview chart to PTS Results Viewer
- pts-core: Improve reporting of Xfce in sw_desktop_environment()
- pts-core: Eliminate need to statically code options and arguments in phoronix-test-suite, but handle most of it dynamically
- pts-core: Allow multiple tests/suites/identifiers to be passed using the install (and force-install) option
- pts-core: Allow multiple tests/suites/identifiers to be passed using the run and benchmark options
- pts: Add filesystem test suite

Phoronix Test Suite 1.6.0 Alpha 2
December 2, 2008

- pts-core: Fix for Self-Contained Test Profiles (SCTP) support
- pts-core: Fix in memory type detection
- pts-core: Improve usability for those without the PHP preg_* functions
- pts-core: When rendering graph results, report the PTS version number from the results file, not current PTS_VERSION
- pts-core: Add support for detecting and reporting the desktop environment / version in use
- pts-core: Add support for dynamically loading objects from sub-directories of pts-core/objects/
- pts-core: Add validate-result mode that PTS test profiles can implement
- pts-core: Fix reporting erroneous motherboard string (Found on QEMU virtualized system)
- pts-core: Add and implement RawString to XML results specification for storing raw result values from all trial runs
- pts-core: Rename analyze option to analyze-batch
- pts-core: Add analyze-all-runs option to generate a candlestick graph showing the distribution of results from all trial runs
- pts-core: Update phoronix-test-suite text
- pts-core: Rework the pts_run_option interface to set options to run next
- pts-core: Change benchmark option to using the revised pts_run_option interface to avoid double pts-core initialization
- pts-core: Eliminate use of SILENT_INSTALL environmental variable
- pts-core: Ensure all PTS options extend the pts_option_interface
- pts-core: Allow pts_Graph to set the default image renderer for blide_renderer
- pts-core: Adjust some tag locations within the user-config.xml (NOTE: USERS MAY NEED TO UPDATE THEIR SETTINGS)
- pts-core: Fix regression in hw_gpu_xrandr_available_modes()
- pts-core: Fix regression in list-all-tests not listing unsupported tests
- pts-core: Remove DownloadSize tag that was deprecated from the test profiles since PTS 1.4 since it's been replaced in the downloads.xml specification
- pts-core: Update CSS and XSL for results viewer, fix table column alignment bug
- pts-core: Fix recent regression in pts_download_test_files() that caused only the first file to be downloaded
- pts-core: Remove old un-used files and installed files prior to installing/reinstalling a test
- pts-core: Add download-test-files option to download files for a test/suite but don't install
- pts-core: Add build-suite option that guides the user through automatically building their own test suite
- pts-core: Clean up / functionize more benchmark run code
- pts-core: Major Self-Contained Test Profile (SCTP) update. Also adds in convert-test-to-sctp option.
- pts: Add adjustable file size support for bonnie test profile
- pts: Update sqlite test profile to version 3.6.6.2
- pts: Update iozone test profile to version 3.315 and add size user option
- pts: Update openarena test profile to use OpenArena 0.8.1 game and new demo file
- tandem_XmlReader: Major performance improvements and optimizations
- bilde_renderer: New PTS-spawned abstracted image rendering interface that supports SVG and PNG rendering with a standard API
- pts_Graph: Various changes to the graphing object
- pts_Graph: Switch from internal image rendering functions to using bilde_renderer
- pts_Graph: Add loadGraphRawValues() for storing raw result data from RawString
- pts_CandleStickGraph: A new graph type that displays results from all test runs and is modeled after Japanese Candlestick charting

Phoronix Test Suite 1.6.0 Alpha 1
November 22, 2008

- pts-core: Add pts_set_assignment(), pts_read_assignment(), pts_is_assignment(), pts_set_assignment_once(), pts_clear_assignment() and pts_clear_assignments()
- pts-core: Switch over relevant define statements to using new PTS assignment functions for program-wide option-specific variable constants
- pts-core: Add pts_test_profile_details class
- pts-core: Add pts_test_suite_details class
- pts-core: Add pts_user_module_details class
- pts-core: Add pts_installed_test_details class
- pts-core: Add pts_test_usage_details class
- pts-core: Add pts_test_results_details class
- pts-core: Add pts_test_result_info_details class
- pts-core: Readjust pts-run-cmd.php code to not be reliant on some items
- pts-core: Drop pts-functions-extras.php and move those functions to other files
- pts-core: Modularize all Phoronix Test Suite run-time user options into options/ classes and using phoronix-test-suite.php interface
- pts-core: Remove pts-run-cmd.php now that all options are modularized
- pts-core: Remove pts-run-test.php now that now that its code is modularized as option run_test
- pts-core: Relocate initialization code to be called from phoronix-test-suite.php
- pts-core: Add STATIC_DIR (pts-core/static/) for some static files
- pts-core: Add static/hal-values-remove.txt to contain a list of all HAL strings to remove if found, instead of having it coded within an array
- pts-core: Add static/info-strings-remove.txt to contain a list of all information strings to remove if found, instead of having it coded within an array
- pts-core: Add static/info-strings-replace.txt to contain a list of all information strings to replace with another value if found, instead of having it coded within an array
- pts-core: Move module-variables.txt to STATIC_DIR
- pts-core: Add static/process-reporting-checks.txt to contain a list of processes to check for and report to the results viewer, instead of having it coded within an array
- pts-core: Switch a few global variables to static
- pts-core: Unify the XSL for the PTS Results Viewer and use a PHP function to insert the respective PNG/SVG markup when saving the results
- pts-core: Add pts_run_option_command() for modularizing executing PTS tasks
- pts-core: Add __pre_option_process() and __post_option_process() to PTS module system
- pts-core: Add "null" to hal-values-remove.txt
- pts-core: Only install external dependencies for tests that are supported on the system (such as with platform and architecture limitations)
- pts-core: Fix for URL empty bug (reported by Stef Telford and Bene18)
- pts-core: Drop ArgumentName profile tag code that's been deprecated since PTS 1.4+ in favor of ArgumentPrefix
- pts-core: Add SearchMediaForCache option that's enabled by default in user-config.xml to automatically search for download caches on removable devices (mounted within /media/)
- pts-core: Use static variable for PTS type caching
- pts-core: Branch out classes from pts-generic-classes.php
- pts-core: Standardize all pts-core official functions with pts_, sw_, hw_, or read_ prefix
- pts-core: Fix graphics constant warnings generated in pts_extended_init()
- pts-core: PTS_START_TIME -> PTS_INIT_TIME and add pts_elapsed_time() function to return the time (in seconds) that the option or pts-core has been running
- pts-core: Eliminate THIS_RUN_TIME constant and add preferred way of using pts_unique_runtime_identifier()
- pts-core: Add fallback option support for read_sysctl()
- pts-core: Add internal caching support for lspci and lsb_release information
- pts-core: Fixes in FreeBSD 7 support
- pts-core: Return false on failure from read_pci() instead of "Unknown" string
- pts-core: Return false on failure from read_lsb() instead of "Unknown" string
- pts-core: Return false on failure from read_sysctl() instead of "Unknown" string
- pts-core: Return false on failure from read_hal(), read_system_hal() instead of "Unknown" string
- pts-core: Eliminate use of global variables in PTS modules support
- pts-core: Finish eliminating use of all global variables throughout pts-core
- pts-core: Implement RequiresRoot tag that has been part of the PTS test profile specification for some time
- pts: Add External Dependencies support for FreeBSD using pkg_add command
- pts: Update most test profiles to reflect whether they are supported on *BSD operating systems
- pts: Enable hdparm test profile to use RequiresRoot capabilities
- tandem_XmlReader: Switch caching from using a GLOBALS variable to using a static variable within the XML reading class
- tandem_XmlReader: Write internal regular expression matcher for systems where preg_match and preg_match_all aren't available
- system_monitor: Update it to work with new APIs
- graphics_override, email_results, toggle_screensaver: Update to take advantage of latest API
