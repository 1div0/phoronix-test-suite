PHORONIX TEST SUITE PUBLIC TODO LIST:

### PTS-CORE ###

- Move External Dependencies into OpenBenchmarking.org cloud
- Reporting to OpenBenchmarking.org on broken download URLs for test profiles.
- Reporting of install times to OpenBenchmarking.org and also exposing this information back to clients.
- Support for multiple languages / internationalization.
- BLKID fall-back support for determining file-system [e.g. /sbin/blkid -s TYPE -o value /dev/sda1].
- Possibly restore "weighted suites" [http://phorogit.com/index.php?p=phoronix-test-suite.git&a=commitdiff&h=548e5c073cc90d92ac3f382ca4933d5f556e78c6&hb=444441f9be866f51920e0ad8ca3909951b4d90c5]
- Integrate recover-run command into the run command, auto-detect if the result file was a partial save and then ask if to perform run recovery' [ POSSIBLY DO THE SAME FOR FINISH-RUN]
- Multi-threaded downloading of test files
- Numerous pts_render improvements [see in-line code comments]
- Optimus / DRI_PRIME=1 / xrandr --listproviders better GPU detection
- NVIDIA make use of UsedDedicatedGPUMemory as new GPU sensor
- Clean up all the WebSocket code and make it fit to spec

### PTS-GRAPH ###

- Improve rendering of large data-sets, e.g. http://openbenchmarking.org/result/1205231-LI-BL460G6BE41
- Rotated text alignment for some PNG graphixs is sometimes off by 90/180 degrees compared to SVG, e.g. http://openbenchmarking.org/s/Compiler
- SVG graph improvements
- WebP image support

### OPENBENCHMARKING.ORG ###

- Shorten long change-logs on test profile pages - e.g. http://openbenchmarking.org/test/pts/hpcc
[ REST SUBJECT TO PHORONIX MEDIA NDA ]

### NEW TEST PROFILES ###

- Python-libmemcached [http://code.google.com/p/python-libmemcached/]
- Intel HiBench [https://github.com/intel-hadoop/HiBench]
- Hadoop Benchmarks
- LATT Latency Tests [git://git.kernel.dk/latt.git]
- QMC Beaver [http://qmcbeaver.sourceforge.net/]
- Some potential interesting GPGPU tests [http://www.bealto.com/gpu-benchmarks.html]
- WebGL / Chrome Test [http://phoronix.com/forums/showthread.php?73167-Some-Benchmarks-to-add-to-PTS-WebGL-and-Google-Chrome]
- GtkPerf improvements [http://phoronix.com/forums/showthread.php?73047-gtkperf-I-m-maintaining-feature-requests-new-tests]
- SIPP [http://sipp.sourceforge.net/]
- oclGaussCrack [https://hashcat.net/oclGaussCrack/]
- http://hashcat.net/oclhashcat/
- Handbrake [http://handbrake.fr/]
- libMicro [https://github.com/portante/libMicro]
- https://code.google.com/p/pyrit/
- http://www.nwchem-sw.org/index.php/Compiling_NWChem
- http://sourceforge.net/projects/ffsb/
- http://www.ratgpu.com/
- http://panthema.net/2013/pmbw/
- http://www.thedarkmod.com/
- http://code.google.com/p/lz4/
- http://parsec.cs.princeton.edu/parsec3-doc.htm
- http://www.capsl.udel.edu/splash/Download.html
- https://github.com/facebook/linkbench
- https://github.com/vasi/pixz
- http://nondot.org/sabre/LLVMNotes/#benchmarks

### WEB SOCKET / HTML5 USER INTERFACE WORK ###

- Implement WebSocket security - add the password prompts from ~/.phoronix-test-suite/user-config.xml, etc
- HTTPS support
- Ensuring only one session at a time, at least for benchmarking
- Handle test installations and external dependencies (prompting for root password handling?)
- Porting more of the web-interface code to the new JavaScript + WebSocket design rather than original PHP design [Originally with the 5.0 UI design it wasn't settled for mostly JS + WebSocket but some of the original code is with a traditional PHP-based + web server design... so slowly move over to newer design.]

### PHOROMATIC ####

- Hookup the email notifications
- Group handling
- Get the Phoromatic search box implemented/working
- Editing/deleting lots of different possible items like scheduling meta-data
- Implement the complementary WebSocket communication to HTTP pulls
- More mobile form factor optimizations
- Ensure sane validating of more user input / resource uploads
- Hook up the system targeting / groups support for test schedules
- Restore some of the older phoromatic code for allowing reboots to happen during context script execution
- Hook up TriggerTarget for allowing event.php to optionally specify a sub-set of systems/groups to target for a given trigger
- Clean up the code and modularize more of the code into functions
